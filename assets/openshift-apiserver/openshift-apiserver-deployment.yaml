kind: Deployment
apiVersion: apps/v1
metadata:
  name: openshift-apiserver
spec:
  replicas: {{ .Replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  selector:
    matchLabels:
      app: openshift-apiserver
  template:
    metadata:
      labels:
        app: openshift-apiserver
        clusterID: "{{ .ClusterID }}"
{{ if .RestartDate }}
      annotations:
        openshift.io/restartedAt: "{{ .RestartDate }}"
{{ end }}
    spec:
      tolerations:
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: clusterID
                      operator: In
                      values: ["{{ .ClusterID }}"]
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["openshift-apiserver"]
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["openshift-apiserver"]
              topologyKey: "topology.kubernetes.io/zone"
      automountServiceAccountToken: false
{{ if .MasterPriorityClass }}
      priorityClassName: {{ .MasterPriorityClass }}
{{ end }}
      containers:
{{- if .KonnectivityEnabled }}
      - name: konnectivity-proxy
{{- if .OpenshiftHAProxySecurityContext }}
{{- $securityContext := .OpenshiftAPIServerSecurityContext }}
        securityContext:
          runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
        image: {{ .OpenshiftHAProxyImage }}
        volumeMounts:
          - name: "proxy-config"
            mountPath: /usr/local/etc/haproxy
          - name: "proxy-secret"
            mountPath: /etc/secret
        imagePullPolicy: IfNotPresent
{{- if .OpenshiftHAProxyContainerResources }}
        resources:{{ range .OpenshiftHAProxyContainerResources }}{{ range .ResourceRequest }}
          requests: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
          limits: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{- end }}
{{- end }}
      - name: openshift-apiserver
{{- if .OpenshiftAPIServerSecurityContext }}
{{- $securityContext := .OpenshiftAPIServerSecurityContext }}
        securityContext:
          runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
        image: {{ imageFor "openshift-apiserver" }}
        args:
        - "start"
        - "--config=/etc/kubernetes/apiserver-config/config.yaml"
        - "--authorization-kubeconfig=/etc/kubernetes/secret/kubeconfig"
        - "--authentication-kubeconfig=/etc/kubernetes/secret/kubeconfig"
        - "--requestheader-client-ca-file=/etc/kubernetes/config/aggregator-client-ca.crt"
        - "--requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator"
        - "--requestheader-username-headers=X-Remote-User"
        - "--requestheader-group-headers=X-Remote-Group"
        - "--requestheader-extra-headers-prefix=X-Remote-Extra-"
        - "--client-ca-file=/etc/kubernetes/config/serving-ca.crt"
{{ if .OpenshiftAPIServerResources }}
        resources:{{ range .OpenshiftAPIServerResources }}{{ range .ResourceRequest }}
          requests: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
          limits: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{ end }}
{{- if .KonnectivityEnabled }}
        env:
        - name: "HTTP_PROXY"
          value: "http://127.0.0.1:10080"
        - name: "HTTPS_PROXY"
          value: "http://127.0.0.1:10080"
        - name: "NO_PROXY"
          value: "kube-apiserver,etcd"
{{- end }}
        volumeMounts:
        - mountPath: /etc/kubernetes/secret
          name: secret
        - mountPath: /etc/kubernetes/apiserver-config
          name: apiserver-config
        - mountPath: /etc/kubernetes/config
          name: config
        - mountPath: /var/run/kubernetes
          name: logs
        workingDir: /var/run/kubernetes
      volumes:
      - secret:
          secretName: openshift-apiserver
          defaultMode: 0640
        name: secret
      - configMap:
          name: openshift-apiserver
        name: config
      - configMap:
          name: openshift-apiserver-config
        name: apiserver-config
      - emptyDir: {}
        name: logs
{{- if .KonnectivityEnabled }}
      - configMap:
          defaultMode: 420
          name: "konnectivity-proxy"
        name: "proxy-config"
      - secret:
          defaultMode: 420
          secretName: "konnectivity-proxy"
        name: "proxy-secret"
{{- end }}
